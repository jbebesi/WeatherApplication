Õ
ëC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Client\ViewModels\IndexViewModel.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Client$ *
.* +

ViewModels+ 5
{ 
public 

class 
IndexViewModel 
{ 
public 
string 
Location 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ⁄^
õC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Client\ViewModels\ShowWeatherDataViewModel.cs
	namespace

 	
WeatherApplication


 
.

 
Shared

 #
.

# $
Client

$ *
.

* +

ViewModels

+ 5
{ 
public 

class $
ShowWeatherDataViewModel )
{ 
public 
WeatherForecastData "
	Forecasts# ,
{- .
get/ 2
;2 3
private4 ;
set< ?
;? @
}A B
private 
List 
< 
string 
> 
CityList %
;% &
private 
readonly 

HttpClient #
_httpClient$ /
;/ 0
private 
string 
selected 
;  
public 
string 
SelectedCity "
{ 	
get 
=> 
selected 
; 
set 
{ 
selected 
= 
value  
;  !
GetForecast 
( 
value !
)! "
." #
Wait# '
(' (
)( )
;) *
} 
} 	
public $
ShowWeatherDataViewModel '
(' (

HttpClient( 2
client3 9
)9 :
{   	
_httpClient!! 
=!! 
client!!  
;!!  !
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
List$$ 
<$$ 
string$$ %
>$$% &
>$$& '
UpdateCityList$$( 6
($$6 7
string$$7 =
filter$$> D
)$$D E
{%% 	
if&& 
(&& 
CityList&& 
==&& 
null&&  
)&&  !
{'' 
CityList(( 
=(( 
new(( 
List(( #
<((# $
string(($ *
>((* +
(((+ ,
)((, -
;((- .
})) 
try** 
{++ 
var,, 
list,, 
=,, 
await,,  
_httpClient,,! ,
.,,, -
GetFromJsonAsync,,- =
<,,= >
CityData,,> F
[,,F G
],,G H
>,,H I
(,,I J
$",,J L
$str,,L Y
{,,Y Z
filter,,Z `
},,` a
",,a b
),,b c
;,,c d
CityList-- 
.-- 
AddRange-- !
(--! "
list--" &
.--& '
Select--' -
(--- .
t--. /
=>--0 2
t--3 4
.--4 5
Text--5 9
)--9 :
)--: ;
;--; <
}.. 
catch// 
(// 
	Exception// 
ex// 
)//  
{00 
Console11 
.11 
	WriteLine11 !
(11! "
ex11" $
.11$ %
Message11% ,
)11, -
;11- .
}22 
return33 
CityList33 
;33 
}55 	
public77 
async77 
Task77 
<77 
List77 
<77 
string77 %
>77% &
>77& '
GetCityList77( 3
(773 4
)774 5
{88 	
if99 
(99 
CityList99 
==99 
null99  
)99  !
try:: 
{;; 
var<< 
list<< 
=<< 
await<< $
_httpClient<<% 0
.<<0 1
GetFromJsonAsync<<1 A
<<<A B
CityData<<B J
[<<J K
]<<K L
><<L M
(<<M N
$str<<N \
)<<\ ]
;<<] ^
CityList== 
=== 
list== #
.==# $
Select==$ *
(==* +
t==+ ,
=>==- /
t==0 1
.==1 2
Text==2 6
)==6 7
.==7 8
ToList==8 >
(==> ?
)==? @
;==@ A
}>> 
catch?? 
(?? 
	Exception??  
ex??! #
)??# $
{@@ 
ConsoleAA 
.AA 
	WriteLineAA %
(AA% &
exAA& (
.AA( )
MessageAA) 0
)AA0 1
;AA1 2
}BB 
returnCC 
CityListCC 
;CC 
}DD 	
publicGG 
asyncGG 
TaskGG 
GetForecastGG %
(GG% &
stringGG& ,
cityGG- 1
)GG1 2
{HH 	
tryII 
{JJ 
stringKK 
urlKK 
=KK 
$"KK 
$strKK /
{KK/ 0
cityKK0 4
}KK4 5
"KK5 6
;KK6 7
ConsoleLL 
.LL 
	WriteLineLL !
(LL! "
$"LL" $
$strLL$ )
{LL) *
_httpClientLL* 5
.LL5 6
BaseAddressLL6 A
}LLA B
{LLB C
urlLLC F
}LLF G
"LLG H
)LLH I
;LLI J
	ForecastsMM 
=MM 
awaitMM !
_httpClientMM" -
.MM- .
GetFromJsonAsyncMM. >
<MM> ?
WeatherForecastDataMM? R
>MMR S
(MMS T
urlMMT W
)MMW X
;MMX Y
}NN 
catchOO 
(OO 
	ExceptionOO 
exOO 
)OO  
{PP 
	ForecastsQQ 
=QQ 
newQQ 
WeatherForecastDataQQ  3
{RR 
CityNameSS 
=SS 
exSS !
.SS! "
MessageSS" )
,SS) *
CountryNameTT 
=TT  !
$strTT" -
,TT- .
WeatherUU 
=UU 
newUU !
WeatherDataUU" -
[UU- .
]UU. /
{UU0 1
newVV 
WeatherDataVV #
(VV# $
)VV$ %
{VV% &
DateTimeVV' /
=VV0 1
DateTimeVV2 :
.VV: ;
NowVV; >
,VV? @ 
TemperatureFeelsLikeVVA U
=VVV W
$numVVX Z
,VV[ \
	LooksLikeVV] f
=VVg h
$strVVi t
,VVu v
Temperature	VVw Ç
=
VVÉ Ñ
$num
VVÖ á
,
VVà â
LocationName
VVä ñ
=
VVó ò
$str
VVò ¢
,
VV£ §
WindDirection
VV• ≤
=
VV≥ ¥
$num
VVµ ∂
,
VV∑ ∏
	WindSpeed
VVπ ¬
=
VV√ ƒ
$num
VV≈ «
}
VV« »
,
VV» …
newWW 
WeatherDataWW #
(WW# $
)WW$ %
{WW% &
DateTimeWW' /
=WW0 1
DateTimeWW2 :
.WW: ;
NowWW; >
.WW> ?

AddMinutesWW? I
(WWI J
$numWWJ K
)WWK L
,WWM N 
TemperatureFeelsLikeWWO c
=WWd e
$numWWf h
,WWi j
	LooksLikeWWk t
=WWu v
$str	WWw Ç
,
WWÉ Ñ
Temperature
WWÖ ê
=
WWë í
$num
WWì ï
,
WWñ ó
LocationName
WWò §
=
WW• ¶
$str
WW¶ ∞
,
WW± ≤
WindDirection
WW≥ ¿
=
WW¡ ¬
$num
WW√ ƒ
,
WW≈ ∆
	WindSpeed
WW« –
=
WW— “
$num
WW” ’
}
WW’ ÷
,
WW÷ ◊
newXX 
WeatherDataXX #
(XX# $
)XX$ %
{XX% &
DateTimeXX' /
=XX0 1
DateTimeXX2 :
.XX: ;
NowXX; >
.XX> ?

AddMinutesXX? I
(XXI J
$numXXJ K
)XXK L
,XXM N 
TemperatureFeelsLikeXXO c
=XXd e
$numXXf h
,XXi j
	LooksLikeXXk t
=XXu v
$str	XXw Ç
,
XXÉ Ñ
Temperature
XXÖ ê
=
XXë í
$num
XXì ï
,
XXñ ó
LocationName
XXò §
=
XX• ¶
$str
XX¶ ∞
,
XX± ≤
WindDirection
XX≥ ¿
=
XX¡ ¬
$num
XX√ ƒ
,
XX≈ ∆
	WindSpeed
XX« –
=
XX— “
$num
XX” ’
}
XX’ ÷
,
XX÷ ◊
newYY 
WeatherDataYY #
(YY# $
)YY$ %
{YY% &
DateTimeYY' /
=YY0 1
DateTimeYY2 :
.YY: ;
NowYY; >
.YY> ?

AddMinutesYY? I
(YYI J
$numYYJ K
)YYK L
,YYM N 
TemperatureFeelsLikeYYO c
=YYd e
$numYYf h
,YYi j
	LooksLikeYYk t
=YYu v
$str	YYw Ç
,
YYÉ Ñ
Temperature
YYÖ ê
=
YYë í
$num
YYì ï
,
YYñ ó
LocationName
YYò §
=
YY• ¶
$str
YY¶ ∞
,
YY± ≤
WindDirection
YY≥ ¿
=
YY¡ ¬
$num
YY√ ƒ
,
YY≈ ∆
	WindSpeed
YY« –
=
YY— “
$num
YY” ’
}
YY’ ÷
,
YY÷ ◊
newZZ 
WeatherDataZZ #
(ZZ# $
)ZZ$ %
{ZZ% &
DateTimeZZ' /
=ZZ0 1
DateTimeZZ2 :
.ZZ: ;
NowZZ; >
.ZZ> ?

AddMinutesZZ? I
(ZZI J
$numZZJ K
)ZZK L
,ZZM N 
TemperatureFeelsLikeZZO c
=ZZd e
$numZZf h
,ZZi j
	LooksLikeZZk t
=ZZu v
$str	ZZw Ç
,
ZZÉ Ñ
Temperature
ZZÖ ê
=
ZZë í
$num
ZZì ï
,
ZZñ ó
LocationName
ZZò §
=
ZZ• ¶
$str
ZZ¶ ∞
,
ZZ± ≤
WindDirection
ZZ≥ ¿
=
ZZ¡ ¬
$num
ZZ√ ƒ
,
ZZ≈ ∆
	WindSpeed
ZZ« –
=
ZZ— “
$num
ZZ” ’
}
ZZ’ ÷
,
ZZ÷ ◊
new[[ 
WeatherData[[ #
([[# $
)[[$ %
{[[% &
DateTime[[' /
=[[0 1
DateTime[[2 :
.[[: ;
Now[[; >
.[[> ?

AddMinutes[[? I
([[I J
$num[[J K
)[[K L
,[[M N 
TemperatureFeelsLike[[O c
=[[d e
$num[[f h
,[[i j
	LooksLike[[k t
=[[u v
$str	[[w Ç
,
[[É Ñ
Temperature
[[Ö ê
=
[[ë í
$num
[[ì ï
,
[[ñ ó
LocationName
[[ò §
=
[[• ¶
$str
[[¶ ∞
,
[[± ≤
WindDirection
[[≥ ¿
=
[[¡ ¬
$num
[[√ ƒ
,
[[≈ ∆
	WindSpeed
[[« –
=
[[— “
$num
[[” ’
}
[[’ ÷
,
[[÷ ◊
new\\ 
WeatherData\\ #
(\\# $
)\\$ %
{\\% &
DateTime\\' /
=\\0 1
DateTime\\2 :
.\\: ;
Now\\; >
.\\> ?

AddMinutes\\? I
(\\I J
$num\\J K
)\\K L
,\\M N 
TemperatureFeelsLike\\O c
=\\d e
$num\\f h
,\\i j
	LooksLike\\k t
=\\u v
$str	\\w Ç
,
\\É Ñ
Temperature
\\Ö ê
=
\\ë í
$num
\\ì ï
,
\\ñ ó
LocationName
\\ò §
=
\\• ¶
$str
\\¶ ∞
,
\\± ≤
WindDirection
\\≥ ¿
=
\\¡ ¬
$num
\\√ ƒ
,
\\≈ ∆
	WindSpeed
\\« –
=
\\— “
$num
\\” ’
}
\\’ ÷
,
\\÷ ◊
new]] 
WeatherData]] #
(]]# $
)]]$ %
{]]% &
DateTime]]' /
=]]0 1
DateTime]]2 :
.]]: ;
Now]]; >
.]]> ?

AddMinutes]]? I
(]]I J
$num]]J K
)]]K L
,]]M N 
TemperatureFeelsLike]]O c
=]]d e
$num]]f h
,]]i j
	LooksLike]]k t
=]]u v
$str	]]w Ç
,
]]É Ñ
Temperature
]]Ö ê
=
]]ë í
$num
]]ì ï
,
]]ñ ó
LocationName
]]ò §
=
]]• ¶
$str
]]¶ ∞
,
]]± ≤
WindDirection
]]≥ ¿
=
]]¡ ¬
$num
]]√ ƒ
,
]]≈ ∆
	WindSpeed
]]« –
=
]]— “
$num
]]” ’
}
]]’ ÷
}^^ 
}__ 
;__ 
}`` 
}bb 	
}dd 
}ee æ
ÉC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Dtos\Misc\CityData.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Dtos$ (
.( )
Misc) -
{ 
public 

struct 
CityData 
{ 
public 
string 
Text 
=> 
Name "
+# $
$str% )
+* +
Country, 3
;3 4
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 
Country

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 

Coordinate 
Coord 
{  !
get" %
;% &
set' *
;* +
}, -
public 
override 
string 
ToString '
(' (
)( )
{ 	
return 
Text 
; 
} 	
} 
public 

struct 

Coordinate 
{ 
public 
double 
Lat 
{ 
get 
;  
set! $
;$ %
}& '
public 
double 
Lon 
{ 
get 
;  
set! $
;$ %
}& '
public 
override 
string 
ToString '
(' (
)( )
{ 	
return 
$str 
+ 
Lat !
.! "
ToString" *
(* +
)+ ,
+- .
Environment/ :
.: ;
NewLine; B
+C D
$str 
+ 
Lon 
. 
ToString '
(' (
)( )
+* +
Environment, 7
.7 8
NewLine8 ?
;? @
} 	
} 
} ˝
áC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Dtos\Misc\LocationData.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Dtos$ (
.( )
Misc) -
{ 
public 

struct 
LocationData 
{ 
public 
readonly 
double 
Altitude '
;' (
public 
readonly 
double 
Latitude '
;' (
public		 
readonly		 
double		 
	Longitude		 (
;		( )
public 
LocationData 
( 
double "
	nAltitude# ,
,, -
double. 4
	nLatitude5 >
,> ?
double@ F

nLongitudeG Q
)Q R
{ 	
Altitude 
= 
	nAltitude  
;  !
Latitude 
= 
	nLatitude  
;  !
	Longitude 
= 

nLongitude "
;" #
} 	
public 
double 
Distance 
( 
LocationData +
other, 1
)1 2
{ 	
return 
Math 
. 
Sqrt 
( 
Math !
.! "
Pow" %
(% &
Latitude& .
-/ 0
other1 6
.6 7
Latitude7 ?
,? @
$numA B
)B C
+D E
Math 
. 
Pow 
( 
	Longitude "
-# $
other% *
.* +
	Longitude+ 4
,4 5
$num6 7
)7 8
)8 9
;9 :
} 	
} 
} ¨	
áC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Dtos\Misc\Subscription.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Dtos$ (
.( )
Misc) -
{ 
public 

class 
Subscription 
{ 
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
LastName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public

 
DateTime

 
SubscriberUntil

 '
{

( )
get

* -
;

- .
set

/ 2
;

2 3
}

4 5
public 
string 

MiddleName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
ID 
{ 
get 
; 
set  
;  !
}" #
} 
} ®I
ÖC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Dtos\OWM\OWMForecast.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Dtos$ (
.( )
OWM) ,
{ 
public 

class 
Main 
{		 
public

 
double

 
Temp

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
double 

Feels_like  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
double 
Temp_min 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
double 
Temp_max 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
Pressure 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	Sea_level 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 

Grnd_level 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
Humidity 
{ 
get !
;! "
set# &
;& '
}( )
public 
double 
Temp_kf 
{ 
get  #
;# $
set% (
;( )
}* +
} 
public 

class 
Wind 
{ 
public 
double 
Speed 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
Deg 
{ 
get 
; 
set !
;! "
}# $
public 
double 
Gust 
{ 
get  
;  !
set" %
;% &
}' (
} 
public 

class 
Sys 
{ 
public 
string 
Pod 
{ 
get 
;  
set! $
;$ %
}& '
}   
public"" 

class"" 
Rain"" 
{## 
public$$ 
double$$ 
_3h$$ 
{$$ 
get$$ 
;$$  
set$$! $
;$$$ %
}$$& '
}%% 
public'' 

class'' 

OWMWeather'' 
{(( 
public)) 
int)) 
Dt)) 
{)) 
get)) 
;)) 
set))  
;))  !
}))" #
public** 
Main** 
Main** 
{** 
get** 
;** 
set**  #
;**# $
}**% &
public++ 
List++ 
<++ 
Weather++ 
>++ 
Weather++ $
{++% &
get++' *
;++* +
set++, /
;++/ 0
}++1 2
public,, 
Clouds,, 
Clouds,, 
{,, 
get,, "
;,," #
set,,$ '
;,,' (
},,) *
public-- 
Wind-- 
Wind-- 
{-- 
get-- 
;-- 
set--  #
;--# $
}--% &
public.. 
int.. 

Visibility.. 
{.. 
get..  #
;..# $
set..% (
;..( )
}..* +
public// 
double// 
Pop// 
{// 
get// 
;//  
set//! $
;//$ %
}//& '
public00 
Sys00 
Sys00 
{00 
get00 
;00 
set00 !
;00! "
}00# $
public11 
string11 
Dt_txt11 
{11 
get11 "
;11" #
set11$ '
;11' (
}11) *
public22 
Rain22 
Rain22 
{22 
get22 
;22 
set22  #
;22# $
}22% &
public44 
WeatherData44 
ToWeatherData44 (
(44( )
)44) *
{55 	
return66 
new66 
WeatherData66 "
(66" #
)66# $
{77 
DateTime88 
=88 
new88 
DateTime88 '
(88' (
Dt88( *
)88* +
,88+ , 
TemperatureFeelsLike99 $
=99% &
(99' (
short99( -
)99- .
Main99. 2
.992 3

Feels_like993 =
,99= >
TemperatureMin:: 
=::  
(::! "
short::" '
)::' (
Main::( ,
.::, -
Temp_min::- 5
,::5 6
TemperatureMax;; 
=;;  
(;;! "
short;;" '
);;' (
Main;;( ,
.;;, -
Temp_max;;- 5
,;;5 6
Temperature<< 
=<< 
(<< 
short<< $
)<<$ %
Main<<% )
.<<) *
Temp<<* .
,<<. /
WindDirection== 
=== 
Wind==  $
.==$ %
Deg==% (
,==( )
	WindSpeed>> 
=>> 
(>> 
short>> "
)>>" #
Wind>># '
.>>' (
Speed>>( -
,>>- .
}?? 
;?? 
}@@ 	
}AA 
publicCC 

classCC 
CoordCC 
{DD 
publicEE 
doubleEE 
LatEE 
{EE 
getEE 
;EE  
setEE! $
;EE$ %
}EE& '
publicFF 
doubleFF 
LonFF 
{FF 
getFF 
;FF  
setFF! $
;FF$ %
}FF& '
}GG 
publicII 

classII 
CityII 
{JJ 
publicKK 
CityKK 
(KK 
stringKK 
nameKK 
)KK  
{LL 	
NameMM 
=MM 
nameMM 
;MM 
}NN 	
publicPP 
intPP 
IdPP 
{PP 
getPP 
;PP 
setPP  
;PP  !
}PP" #
publicQQ 
stringQQ 
NameQQ 
{QQ 
getQQ  
;QQ  !
setQQ" %
;QQ% &
}QQ' (
publicRR 
CoordRR 
CoordRR 
{RR 
getRR  
;RR  !
setRR" %
;RR% &
}RR' (
publicSS 
stringSS 
CountrySS 
{SS 
getSS  #
;SS# $
setSS% (
;SS( )
}SS* +
publicTT 
intTT 

PopulationTT 
{TT 
getTT  #
;TT# $
setTT% (
;TT( )
}TT* +
publicUU 
intUU 
TimezoneUU 
{UU 
getUU !
;UU! "
setUU# &
;UU& '
}UU( )
publicVV 
intVV 
SunriseVV 
{VV 
getVV  
;VV  !
setVV" %
;VV% &
}VV' (
publicWW 
intWW 
SunsetWW 
{WW 
getWW 
;WW  
setWW! $
;WW$ %
}WW& '
}XX 
publicZZ 

classZZ 
OWMForecastZZ 
{[[ 
public\\ 
string\\ 
Cod\\ 
{\\ 
get\\ 
;\\  
set\\! $
;\\$ %
}\\& '
public]] 
int]] 
Message]] 
{]] 
get]]  
;]]  !
set]]" %
;]]% &
}]]' (
public^^ 
int^^ 
Cnt^^ 
{^^ 
get^^ 
;^^ 
set^^ !
;^^! "
}^^# $
public__ 
List__ 
<__ 

OWMWeather__ 
>__ 
List__  $
{__% &
get__' *
;__* +
set__, /
;__/ 0
}__1 2
public`` 
City`` 
City`` 
{`` 
get`` 
;`` 
set``  #
;``# $
}``% &
publicbb 
WeatherForecastDatabb "!
ToWeatherForecastDatabb# 8
(bb8 9
)bb9 :
{cc 	
returndd 
newdd 
WeatherForecastDatadd *
(dd* +
)dd+ ,
{ee 
CityNameff 
=ff 
Cityff 
.ff  
Nameff  $
,ff$ %
CountryNamegg 
=gg 
Citygg "
.gg" #
Countrygg# *
,gg* +
Weatherhh 
=hh 
Listhh 
.hh 
Selecthh %
(hh% &
thh& '
=>hh( *
thh+ ,
.hh, -
ToWeatherDatahh- :
(hh: ;
)hh; <
)hh< =
.hh= >
ToArrayhh> E
(hhE F
)hhF G
}ii 
;ii 
}jj 	
}kk 
}ll í[
ÑC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Dtos\OWM\OWMOneCall.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Dtos$ (
.( )
OWM) ,
{ 
public 

class 
Current 
{ 
public 
int 
Dt 
{ 
get 
; 
set  
;  !
}" #
public		 
int		 
Sunrise		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
int

 
Sunset

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
public 
double 
Temp 
{ 
get  
;  !
set" %
;% &
}' (
public 
double 

Feels_like  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
Pressure 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
Humidity 
{ 
get !
;! "
set# &
;& '
}( )
public 
double 
	Dew_point 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
Uvi 
{ 
get 
; 
set !
;! "
}# $
public 
int 
Clouds 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 

Visibility 
{ 
get  #
;# $
set% (
;( )
}* +
public 
double 

Wind_speed  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
Wind_deg 
{ 
get !
;! "
set# &
;& '
}( )
public 
double 
	Wind_gust 
{  !
get" %
;% &
set' *
;* +
}, -
public 
List 
< 
Weather 
> 
Weather $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
public 

class 
Minutely 
{ 
public 
int 
Dt 
{ 
get 
; 
set  
;  !
}" #
public 
int 
Precipitation  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
public 

class 
Hourly 
{   
public!! 
int!! 
Dt!! 
{!! 
get!! 
;!! 
set!!  
;!!  !
}!!" #
public"" 
double"" 
Temp"" 
{"" 
get""  
;""  !
set""" %
;""% &
}""' (
public## 
double## 

Feels_like##  
{##! "
get### &
;##& '
set##( +
;##+ ,
}##- .
public$$ 
int$$ 
Pressure$$ 
{$$ 
get$$ !
;$$! "
set$$# &
;$$& '
}$$( )
public%% 
int%% 
Humidity%% 
{%% 
get%% !
;%%! "
set%%# &
;%%& '
}%%( )
public&& 
double&& 
	Dew_point&& 
{&&  !
get&&" %
;&&% &
set&&' *
;&&* +
}&&, -
public'' 
double'' 
Uvi'' 
{'' 
get'' 
;''  
set''! $
;''$ %
}''& '
public(( 
int(( 
Clouds(( 
{(( 
get(( 
;((  
set((! $
;(($ %
}((& '
public)) 
int)) 

Visibility)) 
{)) 
get))  #
;))# $
set))% (
;))( )
}))* +
public** 
double** 

Wind_speed**  
{**! "
get**# &
;**& '
set**( +
;**+ ,
}**- .
public++ 
int++ 
Wind_deg++ 
{++ 
get++ !
;++! "
set++# &
;++& '
}++( )
public,, 
double,, 
	Wind_gust,, 
{,,  !
get,," %
;,,% &
set,,' *
;,,* +
},,, -
public-- 
List-- 
<-- 
Weather-- 
>-- 
Weather-- $
{--% &
get--' *
;--* +
set--, /
;--/ 0
}--1 2
public.. 
int.. 
Pop.. 
{.. 
get.. 
;.. 
set.. !
;..! "
}..# $
}// 
public11 

class11 
Temp11 
{22 
public33 
double33 
Day33 
{33 
get33 
;33  
set33! $
;33$ %
}33& '
public44 
double44 
Min44 
{44 
get44 
;44  
set44! $
;44$ %
}44& '
public55 
double55 
Max55 
{55 
get55 
;55  
set55! $
;55$ %
}55& '
public66 
double66 
Night66 
{66 
get66 !
;66! "
set66# &
;66& '
}66( )
public77 
double77 
Eve77 
{77 
get77 
;77  
set77! $
;77$ %
}77& '
public88 
double88 
Morn88 
{88 
get88  
;88  !
set88" %
;88% &
}88' (
}99 
public;; 

class;; 
	FeelsLike;; 
{<< 
public== 
double== 
Day== 
{== 
get== 
;==  
set==! $
;==$ %
}==& '
public>> 
double>> 
Night>> 
{>> 
get>> !
;>>! "
set>># &
;>>& '
}>>( )
public?? 
double?? 
Eve?? 
{?? 
get?? 
;??  
set??! $
;??$ %
}??& '
public@@ 
double@@ 
Morn@@ 
{@@ 
get@@  
;@@  !
set@@" %
;@@% &
}@@' (
}AA 
publicCC 

classCC 
DailyCC 
{DD 
publicEE 
intEE 
DtEE 
{EE 
getEE 
;EE 
setEE  
;EE  !
}EE" #
publicFF 
intFF 
SunriseFF 
{FF 
getFF  
;FF  !
setFF" %
;FF% &
}FF' (
publicGG 
intGG 
SunsetGG 
{GG 
getGG 
;GG  
setGG! $
;GG$ %
}GG& '
publicHH 
intHH 
MoonriseHH 
{HH 
getHH !
;HH! "
setHH# &
;HH& '
}HH( )
publicII 
intII 
MoonsetII 
{II 
getII  
;II  !
setII" %
;II% &
}II' (
publicJJ 
doubleJJ 

Moon_phaseJJ  
{JJ! "
getJJ# &
;JJ& '
setJJ( +
;JJ+ ,
}JJ- .
publicKK 
TempKK 
TempKK 
{KK 
getKK 
;KK 
setKK  #
;KK# $
}KK% &
publicLL 
	FeelsLikeLL 

Feels_likeLL #
{LL$ %
getLL& )
;LL) *
setLL+ .
;LL. /
}LL0 1
publicMM 
intMM 
PressureMM 
{MM 
getMM !
;MM! "
setMM# &
;MM& '
}MM( )
publicNN 
intNN 
HumidityNN 
{NN 
getNN !
;NN! "
setNN# &
;NN& '
}NN( )
publicOO 
doubleOO 
	Dew_pointOO 
{OO  !
getOO" %
;OO% &
setOO' *
;OO* +
}OO, -
publicPP 
doublePP 

Wind_speedPP  
{PP! "
getPP# &
;PP& '
setPP( +
;PP+ ,
}PP- .
publicQQ 
intQQ 
Wind_degQQ 
{QQ 
getQQ !
;QQ! "
setQQ# &
;QQ& '
}QQ( )
publicRR 
doubleRR 
	Wind_gustRR 
{RR  !
getRR" %
;RR% &
setRR' *
;RR* +
}RR, -
publicSS 
ListSS 
<SS 
WeatherSS 
>SS 
WeatherSS $
{SS% &
getSS' *
;SS* +
setSS, /
;SS/ 0
}SS1 2
publicTT 
intTT 
CloudsTT 
{TT 
getTT 
;TT  
setTT! $
;TT$ %
}TT& '
publicUU 
doubleUU 
PopUU 
{UU 
getUU 
;UU  
setUU! $
;UU$ %
}UU& '
publicVV 
doubleVV 
UviVV 
{VV 
getVV 
;VV  
setVV! $
;VV$ %
}VV& '
publicWW 
doubleWW 
?WW 
RainWW 
{WW 
getWW !
;WW! "
setWW# &
;WW& '
}WW( )
}XX 
publicZZ 

classZZ 
RootZZ 
{[[ 
public\\ 
double\\ 
Lat\\ 
{\\ 
get\\ 
;\\  
set\\! $
;\\$ %
}\\& '
public]] 
double]] 
Lon]] 
{]] 
get]] 
;]]  
set]]! $
;]]$ %
}]]& '
public^^ 
string^^ 
Timezone^^ 
{^^  
get^^! $
;^^$ %
set^^& )
;^^) *
}^^+ ,
public__ 
int__ 
Timezone_offset__ "
{__# $
get__% (
;__( )
set__* -
;__- .
}__/ 0
public`` 
Current`` 
Current`` 
{``  
get``! $
;``$ %
set``& )
;``) *
}``+ ,
publicaa 
Listaa 
<aa 
Minutelyaa 
>aa 
Minutelyaa &
{aa' (
getaa) ,
;aa, -
setaa. 1
;aa1 2
}aa3 4
publicbb 
Listbb 
<bb 
Hourlybb 
>bb 
Hourlybb "
{bb# $
getbb% (
;bb( )
setbb* -
;bb- .
}bb/ 0
publiccc 
Listcc 
<cc 
Dailycc 
>cc 
Dailycc  
{cc! "
getcc# &
;cc& '
setcc( +
;cc+ ,
}cc- .
}dd 
}ee π
ÖC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Dtos\OWM\OWMSettings.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Dtos$ (
.( )
OWM) ,
{ 
public 

class 
OWMSettings 
{ 
public 
const 
string 
Settings $
=% &
$str' 4
;4 5
public 
string 
APIKey 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
$str- U
;U V
public 
string 
ForecastUrl !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
$str2 c
;c d
public 
string 

OneCallAPI  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
$str1 b
;b c
public		 
string		 
CityPref		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
=		- .
$str		/ 3
;		3 4
public

 
string

 
Metric

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
=

+ ,
$str

- /
;

/ 0
public 
string 
Lat 
{ 
get 
;  
set! $
;$ %
}& '
=( )
$str* 0
;0 1
public 
string 
Lon 
{ 
get 
;  
set! $
;$ %
}& '
=( )
$str* 0
;0 1
} 
public 

class 
PositionOptions  
{ 
public 
const 
string 
Position $
=% &
$str' 1
;1 2
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ﬂI
àC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Dtos\OWM\OWMWeatherData.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Dtos$ (
.( )
OWM) ,
{ 
public 

struct 
OWMWeatherData  
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
int 
Dt 
{ 
get 
; 
set  
;  !
}" #
public 
DateTime 
Dt_txt 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 

Coordinate 
Coord 
{  !
get" %
;% &
set' *
;* +
}, -
public 
Main 
Main 
{ 
get 
; 
set  #
;# $
}% &
public 
Wind 
Wind 
{ 
get 
; 
set  #
;# $
}% &
public 
List 
< 
Weather 
> 
Weather $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
Clouds 
Clouds 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Rain 
Rain 
{ 
get 
; 
set  #
;# $
}% &
public 
Rain 
Snow 
{ 
get 
; 
set  #
;# $
}% &
public 
static 
explicit 
operator '
WeatherData( 3
(3 4
OWMWeatherData4 B
dataC G
)G H
{ 	
return 
new 
WeatherData "
(" #
( 
short 
) 
data 
. 
Main  
.  !
Temp! %
,% &
( 
short 
) 
data 
. 
Main  
.  !
Temp_max! )
,) *
data 
. 
Name 
, 
( 
short 
) 
data 
. 
Wind  
.  !
Speed! &
,& '
data 
. 
Wind 
. 
Deg 
, 
data 
. 
Name 
, 
data 
. 
Dt_txt 
, 
short   
.   
MinValue   
,   
short!! 
.!! 
MaxValue!! 
)!! 
;!!  
}"" 	
}## 
public%% 

struct%% 

Coordinate%% 
{&& 
public'' 
double'' 
Lat'' 
{'' 
get'' 
;''  
set''! $
;''$ %
}''& '
public(( 
double(( 
Lon(( 
{(( 
get(( 
;((  
set((! $
;(($ %
}((& '
public** 
override** 
string** 
ToString** '
(**' (
)**( )
{++ 	
return,, 
$str,, 
+,, 
Lat,, !
.,,! "
ToString,," *
(,,* +
),,+ ,
+,,- .
Environment,,/ :
.,,: ;
NewLine,,; B
+,,C D
$str-- 
+-- 
Lon-- 
.-- 
ToString-- '
(--' (
)--( )
+--* +
Environment--, 7
.--7 8
NewLine--8 ?
;--? @
}.. 	
}// 
public22 

struct22 
Weather22 
{33 
public44 
int44 
Id44 
{44 
get44 
;44 
set44  
;44  !
}44" #
public55 
string55 
Main55 
{55 
get55  
;55  !
set55" %
;55% &
}55' (
public66 
string66 
Description66 !
{66" #
get66$ '
;66' (
set66) ,
;66, -
}66. /
public77 
string77 
Icon77 
{77 
get77  
;77  !
set77" %
;77% &
}77' (
public99 
override99 
string99 
ToString99 '
(99' (
)99( )
{:: 	
return;; 
$str;; 
+;; 
Main;; #
+;;$ %
Environment;;& 1
.;;1 2
NewLine;;2 9
+;;: ;
$str<<  
+<<! "
Description<<# .
+<</ 0
Environment<<1 <
.<<< =
NewLine<<= D
+<<E F
$str== 
+== 
Icon==  
+==! "
Environment==# .
.==. /
NewLine==/ 6
;==6 7
}>> 	
}?? 
publicAA 

structAA 
CloudsAA 
{BB 
publicDD 
intDD 
AllDD 
{DD 
getDD 
;DD 
setDD !
;DD! "
}DD# $
publicFF 
overrideFF 
stringFF 
ToStringFF '
(FF' (
)FF( )
{GG 	
returnHH 
$strHH 
+HH 
AllHH !
.HH! "
ToStringHH" *
(HH* +
)HH+ ,
+HH- .
EnvironmentHH/ :
.HH: ;
NewLineHH; B
;HHB C
}II 	
}JJ 
publicMM 

structMM "
OWMWeatherForecastDataMM (
{NN 
publicOO 
intOO 
CodeOO 
{OO 
getOO 
;OO 
setOO "
;OO" #
}OO$ %
publicPP 
stringPP 
MessagePP 
{PP 
getPP  #
;PP# $
setPP% (
;PP( )
}PP* +
publicQQ 
intQQ 
CntQQ 
{QQ 
getQQ 
;QQ 
setQQ !
;QQ! "
}QQ# $
publicRR 
OWMWeatherDataRR 
[RR 
]RR 
ListRR  $
{RR% &
getRR' *
;RR* +
setRR, /
;RR/ 0
}RR1 2
publicSS 
OWMCitySS 
CitySS 
{SS 
getSS !
;SS! "
setSS# &
;SS& '
}SS( )
publicUU 
staticUU 
implicitUU 
operatorUU '
WeatherForecastDataUU( ;
(UU; <"
OWMWeatherForecastDataUU< R
dataUUS W
)UUW X
{VV 	
returnWW 
newWW 
WeatherForecastDataWW *
{XX 
WeatherYY 
=YY 
dataYY 
.YY 
ListYY #
.YY# $
ToListYY$ *
(YY* +
)YY+ ,
.YY, -

ConvertAllYY- 7
(YY7 8
tYY8 9
=>YY: <
(YY= >
WeatherDataYY> I
)YYI J
tYYJ K
)YYK L
.YYL M
ToArrayYYM T
(YYT U
)YYU V
,YYV W
CityNameZZ 
=ZZ 
dataZZ 
.ZZ  
CityZZ  $
.ZZ$ %
NameZZ% )
,ZZ) *
CountryName[[ 
=[[ 
data[[ "
.[[" #
City[[# '
.[[' (
Country[[( /
}\\ 
;\\ 
}]] 	
}^^ 
public`` 

struct`` 
OWMCity`` 
{aa 
publicbb 
intbb 
Idbb 
{bb 
getbb 
;bb 
setbb  
;bb  !
}bb" #
publiccc 
stringcc 
Namecc 
{cc 
getcc  
;cc  !
setcc" %
;cc% &
}cc' (
publicdd 

Coordinatedd 
Coorddd 
{dd  !
getdd" %
;dd% &
setdd' *
;dd* +
}dd, -
publicee 
stringee 
Countryee 
{ee 
getee  #
;ee# $
setee% (
;ee( )
}ee* +
publicgg 
intgg 
TimeZonegg 
{gg 
getgg !
;gg! "
setgg# &
;gg& '
}gg( )
publichh 
inthh 

Populationhh 
{hh 
gethh  #
;hh# $
sethh% (
;hh( )
}hh* +
publicii 
intii 
Sunriseii 
{ii 
getii  
;ii  !
setii" %
;ii% &
}ii' (
publicjj 
intjj 
Sunsetjj 
{jj 
getjj 
;jj  
setjj! $
;jj$ %
}jj& '
}kk 
}ll Œ(
âC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Dtos\Weather\WeatherData.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Dtos$ (
.( )
Weather) 0
{ 
public 

struct 
WeatherData 
{ 
public 
enum 
DataType 
{ 	
Temperature		 
,		 
Wind

 
,

  
TemperatureFeelsLike  
,  !
WindDirection 
} 	
public 
short 
Temperature  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
short 
TemperatureMin #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
short 
TemperatureMax #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
short  
TemperatureFeelsLike )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
string 
	LooksLike 
{  !
get" %
;% &
set' *
;* +
}, -
public 
short 
	WindSpeed 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
double 
WindDirection #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
LocationName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
DateTime  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
WeatherData 
( 
short  
nTemperature! -
,- .
short/ 4!
nTemperatureFeelsLike5 J
,J K
stringL R

nLooksLikeS ]
,] ^
short_ d

nWindSpeede o
,o p
doubleq w
nWindDirection	x Ü
,
Ü á
string
à é
nLocationName
è ú
,
ú ù
DateTime
û ¶
	nDateTime
ß ∞
,
∞ ±
short
≤ ∑
nTempMax
∏ ¿
,
¿ ¡
short
¬ «
nTempMin
» –
)
– —
{ 	
Temperature 
= 
nTemperature &
;& ' 
TemperatureFeelsLike  
=! "!
nTemperatureFeelsLike# 8
;8 9
	LooksLike 
= 

nLooksLike "
;" #
	WindSpeed 
= 

nWindSpeed "
;" #
WindDirection 
= 
nWindDirection *
;* +
LocationName   
=   
nLocationName   (
;  ( )
DateTime!! 
=!! 
	nDateTime!!  
;!!  !
TemperatureMax"" 
="" 
nTempMax"" %
;""% &
TemperatureMin## 
=## 
nTempMin## %
;##% &
}$$ 	
public&& 
int&& 
this&& 
[&& 
DataType&&  
data&&! %
]&&% &
{'' 	
get(( 
{)) 
return** 
data** 
switch** "
{++ 
DataType,, 
.,, 
Temperature,, (
=>,,) +
Temperature,,, 7
,,,7 8
DataType-- 
.-- 
Wind-- !
=>--" $
	WindSpeed--% .
,--. /
DataType.. 
...  
TemperatureFeelsLike.. 1
=>..2 4 
TemperatureFeelsLike..5 I
,..I J
DataType// 
.// 
WindDirection// *
=>//+ -
(//. /
int/// 2
)//2 3
WindDirection//3 @
,//@ A
_00 
=>00 
throw00 
new00 "
ArgumentException00# 4
(004 5
$str005 N
+00O P
data00Q U
.00U V
ToString00V ^
(00^ _
)00_ `
)00` a
,00a b
}11 
;11 
}22 
}33 	
}44 
public66 

class66 
WeatherForecastData66 $
{77 
public88 
string88 
CityName88 
{88  
get88! $
;88$ %
set88& )
;88) *
}88+ ,
public99 
string99 
CountryName99 !
{99" #
get99$ '
;99' (
set99) ,
;99, -
}99. /
public:: 
WeatherData:: 
[:: 
]:: 
Weather:: $
{::% &
get::' *
;::* +
set::, /
;::/ 0
}::1 2
};; 
}<< Ç	
çC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Dtos\Weather\WeatherForecast.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Dtos$ (
.( )
Weather) 0
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
} 
} õ
ÖC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Helpers\LoadCityList.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Helpers$ +
{ 
public		 

static		 
class		 
LoadCityList		 $
{

 
private 
static 
List 
< 
CityData $
>$ %
	_cityList& /
;/ 0
public 
static 
List 
< 
CityData #
># $
GetCityList% 0
(0 1
)1 2
{ 	
try 
{ 
if 
( 
	_cityList 
==  
null! %
)% &
{ 
string 
s 
= 
System %
.% &
Text& *
.* +
Encoding+ 3
.3 4
UTF84 8
.8 9
	GetString9 B
(B C

PropertiesC M
.M N
	ResourcesN W
.W X
	city_listX a
)a b
;b c
	_cityList 
= 
JsonConvert  +
.+ ,
DeserializeObject, =
<= >
List> B
<B C
CityDataC K
>K L
>L M
(M N
sN O
)O P
.P Q
ToListQ W
(W X
)X Y
;Y Z
} 
} 
catch 
( 
	Exception 
ex 
)  
{ 
Console 
. 
	WriteLine !
(! "
ex" $
.$ %
Message% ,
), -
;- .
} 
return 
	_cityList 
; 
} 	
} 
} Â
çC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Interfaces\ICityListProvider.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $

Interfaces$ .
{ 
public 

	interface 
ICityListProvider &
{ 
public 
IEnumerable 
< 
CityData #
># $
GetCityList% 0
(0 1
string1 7
filter8 >
,> ?
int@ C
maxCountD L
)L M
;M N
public		 
IEnumerable		 
<		 
CityData		 #
>		# $
GetCityList		% 0
(		0 1
string		1 7
filter		8 >
)		> ?
;		? @
}

 
} €
çC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Interfaces\IWeatherDataStore.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $

Interfaces$ .
{ 
public 

	interface 
IWeatherDataStore &
{ 
Task 
< 
WeatherForecastData  
>  !$
GetWeatherForecastsAsync" :
(: ;
string; A
cityB F
)F G
;G H
}		 
}

 ó	
åC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Interfaces\IWeatherProvider.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $

Interfaces$ .
{ 
public 

	interface 
IWeatherProvider %
{ 
Task		 
<		 
WeatherData		 
>		 
GetCityData		 %
(		% &
string		& ,
name		- 1
)		1 2
;		2 3
Task

 
<

 
WeatherData

 
>

 
GetLocationData

 )
(

) *
LocationData

* 6
location

7 ?
)

? @
;

@ A
Task 
< 
WeatherForecastData  
>  !
GetLocationForecast" 5
(5 6
LocationData6 B
locationC K
)K L
;L M
Task 
< 
WeatherForecastData  
>  !
GetCityForecast" 1
(1 2
string2 8
name9 =
)= >
;> ?
} 
} Î
ãC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Interfaces\IWeatherService.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $

Interfaces$ .
{ 
public 

	interface 
IWeatherService $
{ 
public 
Task 
< 
WeatherForecastData '
>' ($
GetWeatherForecastsAsync) A
(A B
stringB H
cityI M
)M N
;N O
}

 
} Ü
äC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Services\CityListProvider.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Services$ ,
{ 
public		 

class		 
CityListProvider		 !
:		" #
ICityListProvider		$ 5
{

 
private 
readonly 
List 
< 
CityData &
>& '
	_cityList( 1
;1 2
public 
CityListProvider 
(  
)  !
{ 	
	_cityList 
= 
LoadCityList $
.$ %
GetCityList% 0
(0 1
)1 2
;2 3
} 	
public 
IEnumerable 
< 
CityData #
># $
GetCityList% 0
(0 1
string1 7
filter8 >
,> ?
int@ C
maxCountD L
)L M
{ 	
return 
	_cityList 
. 
Where "
(" #
t# $
=>% '
t( )
.) *
Text* .
.. /
Contains/ 7
(7 8
filter8 >
)> ?
)? @
.@ A
TakeA E
(E F
maxCountF N
)N O
.O P
ToListP V
(V W
)W X
;X Y
} 	
public 
IEnumerable 
< 
CityData #
># $
GetCityList% 0
(0 1
string1 7
filter8 >
)> ?
{ 	
return 
GetCityList 
( 
filter %
,% &
$num' )
)) *
;* +
} 	
} 
} äQ
ìC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Services\OWM\ConnectOpenWeatherMap.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Services$ ,
., -
OWM- 0
{ 
public 

class !
ConnectOpenWeatherMap &
:' (
IWeatherProvider) 9
{ 
private 
readonly 
OWMSettings $
	_settings% .
;. /
private 
readonly 
ILogger  
<  !!
ConnectOpenWeatherMap! 6
>6 7
_logger8 ?
;? @
private 
readonly 

HttpClient #
_httpClient$ /
;/ 0
public !
ConnectOpenWeatherMap $
($ %

HttpClient% /

httpClient0 :
,: ;
ILogger< C
<C D!
ConnectOpenWeatherMapD Y
>Y Z
logger[ a
)a b
{ 	
_logger 
= 
logger 
; 
_httpClient 
= 

httpClient $
;$ %
	_settings 
= 
new 
OWMSettings '
(' (
)( )
;) *
} 	
public 
async 
Task 
< 
WeatherData %
>% &
GetCityData' 2
(2 3
string3 9
name: >
)> ?
{ 	
try 
{   
HttpResponseMessage!! #
resp!!$ (
=!!) *
await!!+ 0
_httpClient!!1 <
.!!< =
GetAsync!!= E
(!!E F
	_settings!!F O
.!!O P
CityPref!!P X
+!!Y Z
name!![ _
+!!` a
	_settings!!b k
.!!k l
Metric!!l r
+!!s t
	_settings!!u ~
.!!~ 
APIKey	!! Ö
)
!!Ö Ü
.
!!Ü á
ConfigureAwait
!!á ï
(
!!ï ñ
false
!!ñ õ
)
!!õ ú
;
!!ú ù
if"" 
("" 
resp"" 
."" 
Content""  
!=""! #
null""$ (
)""( )
{## 
string$$ 
responseString$$ )
=$$* +
await$$, 1
resp$$2 6
.$$6 7
Content$$7 >
.$$> ?
ReadAsStringAsync$$? P
($$P Q
)$$Q R
.$$R S
ConfigureAwait$$S a
($$a b
false$$b g
)$$g h
;$$h i
Console%% 
.%% 
	WriteLine%% %
(%%% &
responseString%%& 4
)%%4 5
;%%5 6
return&& 
(&& 
WeatherData&& '
)&&' (
JsonConvert&&( 3
.&&3 4
DeserializeObject&&4 E
<&&E F
OWMWeatherData&&F T
>&&T U
(&&U V
responseString&&V d
)&&d e
;&&e f
}'' 
}(( 
catch)) 
()) 
	Exception)) 
ex)) 
)))  
{** 
_logger++ 
.++ 
LogError++  
(++  !
ex++! #
.++# $
Message++$ +
,+++ ,
ex++- /
)++/ 0
;++0 1
},, 
return-- 
new-- 
WeatherData-- "
(--" #
)--# $
;--$ %
}.. 	
public00 
async00 
Task00 
<00 
WeatherData00 %
>00% &
GetLocationData00' 6
(006 7
LocationData007 C
location00D L
)00L M
{11 	
try22 
{33 
string44 
rString44 
=44  
	_settings44! *
.44* +
Lat44+ .
+44/ 0
location441 9
.449 :
Latitude44: B
+44C D
	_settings44E N
.44N O
Lon44O R
+44S T
location44U ]
.44] ^
	Longitude44^ g
;44g h
HttpResponseMessage55 #
resp55$ (
=55) *
await55+ 0
_httpClient551 <
.55< =
GetAsync55= E
(55E F
rString55F M
+55N O
	_settings55P Y
.55Y Z
Metric55Z `
+55a b
	_settings55c l
.55l m
APIKey55m s
)55s t
.55t u
ConfigureAwait	55u É
(
55É Ñ
false
55Ñ â
)
55â ä
;
55ä ã
if66 
(66 
resp66 
.66 
Content66  
!=66! #
null66$ (
)66( )
{77 
string88 
responseString88 )
=88* +
await88, 1
resp882 6
.886 7
Content887 >
.88> ?
ReadAsStringAsync88? P
(88P Q
)88Q R
.88R S
ConfigureAwait88S a
(88a b
false88b g
)88g h
;88h i
Console99 
.99 
	WriteLine99 %
(99% &
responseString99& 4
)994 5
;995 6
return:: 
(:: 
WeatherData:: '
)::' (
JsonConvert::( 3
.::3 4
DeserializeObject::4 E
<::E F
OWMWeatherData::F T
>::T U
(::U V
responseString::V d
)::d e
;::e f
};; 
}<< 
catch== 
(== 
	Exception== 
ex== 
)==  
{>> 
_logger?? 
.?? 
LogError??  
(??  !
ex??! #
.??# $
Message??$ +
,??+ ,
ex??- /
)??/ 0
;??0 1
}@@ 
returnAA 
newAA 
WeatherDataAA "
(AA" #
)AA# $
;AA$ %
}BB 	
publicEE 
asyncEE 
TaskEE 
<EE 
WeatherForecastDataEE -
>EE- .
GetCityForecastEE/ >
(EE> ?
stringEE? E
cityEEF J
)EEJ K
{FF 	
tryGG 
{HH 
varII 
queryII 
=II 
$"II 
{II 
	_settingsII (
.II( )
ForecastUrlII) 4
}II4 5
$strII5 6
{II6 7
	_settingsII7 @
.II@ A
CityPrefIIA I
}III J
{IIJ K
cityIIK O
}IIO P
$strIIP ^
{II^ _
	_settingsII_ h
.IIh i
APIKeyIIi o
}IIo p
"IIp q
;IIq r
OWMForecastJJ 
respJJ  
=JJ! "
awaitJJ# (
_httpClientJJ) 4
.JJ4 5
GetFromJsonAsyncJJ5 E
<JJE F
OWMForecastJJF Q
>JJQ R
(JJR S
queryJJS X
)JJX Y
.JJY Z
ConfigureAwaitJJZ h
(JJh i
falseJJi n
)JJn o
;JJo p
returnKK 
respKK 
.KK !
ToWeatherForecastDataKK 1
(KK1 2
)KK2 3
;KK3 4
}MM 
catchNN 
(NN 
	ExceptionNN 
exNN 
)NN  
{OO 
_loggerPP 
.PP 
LogErrorPP  
(PP  !
exPP! #
.PP# $
MessagePP$ +
,PP+ ,
exPP- /
)PP/ 0
;PP0 1
}QQ 
returnRR 
newRR 
WeatherForecastDataRR *
(RR* +
)RR+ ,
;RR, -
}SS 	
publicTT 
asyncTT 
TaskTT 
<TT 
WeatherForecastDataTT -
>TT- .
GetLocationForecastTT/ B
(TTB C
LocationDataTTC O
locationTTP X
)TTX Y
{UU 	
tryVV 
{WW 
varXX 
queryXX 
=XX 
$"XX 
{XX 
	_settingsXX (
.XX( )

OneCallAPIXX) 3
}XX3 4
$strXX4 5
{XX5 6
	_settingsXX6 ?
.XX? @
LatXX@ C
}XXC D
{XXD E
locationXXE M
.XXM N
LatitudeXXN V
}XXV W
{XXW X
	_settingsXXX a
.XXa b
LonXXb e
}XXe f
{XXf g
locationXXg o
.XXo p
	LongitudeXXp y
}XXy z
{XXz {
	_settings	XX{ Ñ
.
XXÑ Ö
APIKey
XXÖ ã
}
XXã å
"
XXå ç
;
XXç é
HttpResponseMessageZZ #
respZZ$ (
=ZZ) *
awaitZZ+ 0
_httpClientZZ1 <
.ZZ< =
GetAsyncZZ= E
(ZZE F
queryZZF K
)ZZK L
.ZZL M
ConfigureAwaitZZM [
(ZZ[ \
falseZZ\ a
)ZZa b
;ZZb c
if[[ 
([[ 
resp[[ 
.[[ 
Content[[  
!=[[! #
null[[$ (
)[[( )
{\\ 
string]] 
responseString]] )
=]]* +
await]], 1
resp]]2 6
.]]6 7
Content]]7 >
.]]> ?
ReadAsStringAsync]]? P
(]]P Q
)]]Q R
.]]R S
ConfigureAwait]]S a
(]]a b
false]]b g
)]]g h
;]]h i
var^^ 
data^^ 
=^^ 
JsonConvert^^ *
.^^* +
DeserializeObject^^+ <
<^^< =
OWMWeatherData^^= K
>^^K L
(^^L M
responseString^^M [
)^^[ \
;^^\ ]
return__ 
new__ 
WeatherForecastData__ 2
(__2 3
)__3 4
{__5 6
Weather__7 >
=__? @
new__A D
WeatherData__E P
[__P Q
]__Q R
{__S T
(__U V
WeatherData__V a
)__a b
data__b f
}__g h
}__i j
;__j k
}`` 
}aa 
catchbb 
(bb 
	Exceptionbb 
exbb 
)bb  
{cc 
_loggerdd 
.dd 
LogErrordd  
(dd  !
exdd! #
.dd# $
Messagedd$ +
,dd+ ,
exdd- /
)dd/ 0
;dd0 1
}ee 
returnff 
newff 
WeatherForecastDataff *
(ff* +
)ff+ ,
;ff, -
}gg 	
}hh 
}ii µ
äC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Services\WeatherDataStore.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Services$ ,
{		 
public

 

class

 
WeatherDataStore

 !
:

" #
IWeatherDataStore

$ 5
{ 
private 
readonly 
ILogger  
<  !
WeatherDataStore! 1
>1 2
_logger3 :
;: ;
private 
readonly 
IWeatherProvider )
_weatherProvider* :
;: ;
private 
readonly 

Dictionary #
<# $
string$ *
,* +
Tuple, 1
<1 2
WeatherForecastData2 E
,E F
DateTimeG O
>O P
>P Q
_storedWeatherDataR d
;d e
public 
WeatherDataStore 
(  
ILogger  '
<' (
WeatherDataStore( 8
>8 9
logger: @
,@ A
IWeatherProviderB R
weatherProviderS b
)b c
{ 	
_logger 
= 
logger 
; 
_weatherProvider 
= 
weatherProvider .
;. /
_storedWeatherData 
=  
new! $

Dictionary% /
</ 0
string0 6
,6 7
Tuple8 =
<= >
WeatherForecastData> Q
,Q R
DateTimeS [
>[ \
>\ ]
(] ^
)^ _
;_ `
} 	
public 
async 
Task 
< 
WeatherForecastData -
>- .$
GetWeatherForecastsAsync/ G
(G H
stringH N
cityO S
)S T
{ 	
if 
( 
_storedWeatherData "
." #
ContainsKey# .
(. /
city/ 3
)3 4
)4 5
{ 
var 
result 
= 
_storedWeatherData /
[/ 0
city0 4
]4 5
;5 6
if 
( 
result 
. 
Item2  
.  !
Date! %
.% &
AddHours& .
(. /
$num/ 0
)0 1
<2 3
DateTime4 <
.< =
Now= @
)@ A
return 
result !
.! "
Item1" '
;' (
else   
{!! 
_storedWeatherData"" &
.""& '
Remove""' -
(""- .
city"". 2
)""2 3
;""3 4
}## 
}$$ 
var%% 
updated%% 
=%% 
await%% 
_weatherProvider%%  0
.%%0 1
GetCityForecast%%1 @
(%%@ A
city%%A E
)%%E F
;%%F G
_storedWeatherData&& 
.&& 
Add&& "
(&&" #
city&&# '
,&&' (
Tuple&&) .
.&&. /
Create&&/ 5
(&&5 6
updated&&6 =
,&&= >
DateTime&&? G
.&&G H
Now&&H K
)&&K L
)&&L M
;&&M N
return'' 
updated'' 
;'' 
}(( 	
})) 
}** ∏
àC:\Users\Janos Bebesi\source\repos\WeatherApplication\SourceCode\WeatherApplication\WeatherApplication\Shared\Services\WeatherService.cs
	namespace 	
WeatherApplication
 
. 
Shared #
.# $
Services$ ,
{ 
public		 

class		 
WeatherService		 
:		  !
IWeatherService		" 1
{

 
private 
readonly 
ILogger  
<  !
WeatherService! /
>/ 0
_ILogger1 9
;9 :
private 
readonly 
IWeatherDataStore *
_WeatherService+ :
;: ;
public 
WeatherService 
( 
ILogger %
<% &
WeatherService& 4
>4 5
logger6 <
,< =
IWeatherDataStore> O
weatherDataStoreP `
)` a
{ 	
_ILogger 
= 
logger 
??  
throw! &
new' *!
ArgumentNullException+ @
(@ A
nameofA G
(G H
loggerH N
)N O
)O P
;P Q
_WeatherService 
= 
weatherDataStore .
??/ 1
throw2 7
new8 ;!
ArgumentNullException< Q
(Q R
nameofR X
(X Y
weatherDataStoreY i
)i j
)j k
;k l
} 	
public 
async 
Task 
< 
WeatherForecastData -
>- .$
GetWeatherForecastsAsync/ G
(G H
stringH N
cityO S
)S T
{ 	
return 
await 
_WeatherService (
.( )$
GetWeatherForecastsAsync) A
(A B
cityB F
)F G
;G H
} 	
} 
} 